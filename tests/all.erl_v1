%%% -------------------------------------------------------------------
%%% @author  : Joq Erlang
%%% @doc: : 
%%% Created :
%%% Node end point  
%%% Creates and deletes Pods
%%% 
%%% API-kube: Interface 
%%% Pod consits beams from all services, app and app and sup erl.
%%% The setup of envs is
%%% -------------------------------------------------------------------
-module(all).      
    
 
-export([start/1]).
%% --------------------------------------------------------------------
%% Include files
%% --------------------------------------------------------------------
-define(Parents,['c200_c201_parent@c200','c200_c201_parent@c201']).
-define(Cookie,cookie_c200_c201).
%% --------------------------------------------------------------------
%% Function: available_hosts()
%% Description: Based on hosts.config file checks which hosts are avaible
%% Returns: List({HostId,Ip,SshPort,Uid,Pwd}
%% --------------------------------------------------------------------
start([ClusterSpec,_Arg2])->
    io:format("Start ~p~n",[{?MODULE,?FUNCTION_NAME}]),
    
    ok=setup(),
    ok=create_new_cluster(ClusterSpec),
 %   ok=connect_tests:start([ClusterSpec,_Arg2]),    
    io:format("Stop OK !!! ~p~n",[{?MODULE,?FUNCTION_NAME}]),
 %   timer:sleep(2000),
 %  init:stop(),
    ok.


%% --------------------------------------------------------------------
%% Function: available_hosts()
%% Description: Based on hosts.config file checks which hosts are avaible
%% Returns: List({HostId,Ip,SshPort,Uid,Pwd}
%% --------------------------------------------------------------------
create_new_cluster(ClusterSpec)->
    io:format("Start ~p~n",[{?MODULE,?FUNCTION_NAME}]),
    
    {ok,PodLog}=console:new_cluster(ClusterSpec),
    [pong,pong]=[net_adm:ping(Node)||Node<-?Parents],
    io:format("PodLog ~p~n",[{PodLog,?MODULE,?FUNCTION_NAME}]),
    
    
    
    
   
    ok.
%% Function: available_hosts()
%% Description: Based on hosts.config file checks which hosts are avaible
%% Returns: List({HostId,Ip,SshPort,Uid,Pwd}
%% --------------------------------------------------------------------

setup()->
    io:format("Start ~p~n",[{?MODULE,?FUNCTION_NAME}]),
   
    %-- stop parents , testing only
    erlang:set_cookie(node(),?Cookie),
  %  Nodes=[rpc:call(N,net_adm,ping,[],5000)||N<-?Parents],
    
    [rpc:call(N,init,stop,[],5000)||N<-?Parents],
    timer:sleep(1000),
    [rpc:call(N,net_adm,ping,[],5000)||N<-?Parents],
    ok=application:start(console),
    pong=console:ping(),
    io:format("Start  ~p~n",[{console,?MODULE,?FUNCTION_NAME}]),
    
    ok.
